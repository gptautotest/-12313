
import React, { Suspense, useState } from 'react';
import { BrowserRouter, Route, Routes } from 'react-router-dom';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { Toaster } from "@/components/ui/toaster";
import { Sonner } from 'sonner';
import { TooltipProvider } from "@/components/ui/tooltip";
import './App.css';

// –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —á—Ç–æ–±—ã —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
const SolanaControls = React.lazy(() => import('./components/SolanaControls'));
const SingleFile = React.lazy(() => import('./pages/SingleFile'));
const NotFound = React.lazy(() => import('./pages/NotFound'));

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π QueryClient —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è —Ä–µ—Ç—Ä–∞–µ–≤
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: 2,
      retryDelay: 1000,
      staleTime: 10000,
      refetchOnWindowFocus: false,
    },
  },
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
class ErrorBoundary extends React.Component<{children: React.ReactNode}> {
  state = { hasError: false, error: null };

  static getDerivedStateFromError(error: any) {
    return { hasError: true, error };
  }

  componentDidCatch(error: any, errorInfo: any) {
    console.error("üî¥ –ü–û–ô–ú–ê–õ–ò –û–®–ò–ë–ö–£:", error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return (
        <div className="error-container p-4 m-4 bg-red-100 border border-red-400 text-red-700 rounded">
          <h1 className="text-xl font-bold mb-2">üí∏ –ú–ï–ú–ö–û–ò–ù-–û–®–ò–ë–ö–ê! üí∏</h1>
          <p>–î–∞–∂–µ –º–∏–ª–ª–∏–æ–Ω–µ—Ä—ã –∏–Ω–æ–≥–¥–∞ –æ—à–∏–±–∞—é—Ç—Å—è! –ù–∞—à —Å—É–ø–µ—Ä-–±–æ—Ç —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π.</p>
          <button 
            className="mt-2 bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded"
            onClick={() => window.location.reload()}
          >
            üöÄ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–¨ –†–ê–ö–ï–¢–£
          </button>
        </div>
      );
    }
    return this.props.children;
  }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
const LoadingFallback = () => (
  <div className="flex items-center justify-center h-screen">
    <div className="text-center">
      <div className="mb-4 text-3xl font-bold animate-pulse">‚ö° –ó–ê–ì–†–£–ñ–ê–ï–ú –°–£–ü–ï–†-–ë–û–¢–ê ‚ö°</div>
      <div className="text-xl">–°–∫–æ—Ä–æ –ø–æ–ª–µ—Ç–∏–º –Ω–∞ –ª—É–Ω—É! üöÄ</div>
    </div>
  </div>
);

const App = () => {
  const [mounted, setMounted] = useState(false);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º React.useEffect –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  React.useEffect(() => {
    setMounted(true);
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±–µ—â–∞–Ω–∏–π
    const handleUnhandledRejection = (event: PromiseRejectionEvent) => {
      console.warn('‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', event.reason);
      event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    };
    
    window.addEventListener('unhandledrejection', handleUnhandledRejection);
    
    return () => {
      window.removeEventListener('unhandledrejection', handleUnhandledRejection);
    };
  }, []);
  
  if (!mounted) return <LoadingFallback />;

  return (
    <ErrorBoundary>
      <QueryClientProvider client={queryClient}>
        <TooltipProvider>
          <BrowserRouter>
            <Suspense fallback={<LoadingFallback />}>
              <div className="flex flex-col md:flex-row min-h-screen">
                <SolanaControls />
                <div className="md:ml-64 p-4 flex-1">
                  <Routes>
                    <Route path="/" element={<SingleFile />} />
                    <Route path="/index" element={<SingleFile />} />
                    <Route path="*" element={<NotFound />} />
                  </Routes>
                </div>
              </div>
            </Suspense>
          </BrowserRouter>
          <Toaster />
          <Sonner />
        </TooltipProvider>
      </QueryClientProvider>
    </ErrorBoundary>
  );
};

export default App;
